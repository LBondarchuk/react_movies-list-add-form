{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","count","required","onChange","isEqual","useState","Math","random","toString","slice","id","touched","setToched","hasError","useEffect","htmlFor","classNames","type","placeholder","defaultValue","event","currentTarget","trim","onBlur","inputs","defaultMovie","NewMovie","onAdd","setCount","setMovie","validUrl","url","RegExp","test","isValueEmpty","Object","entries","filter","item","every","input","inputName","includes","disabled","onClick","e","preventDefault","length","addHandler","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.60b75bfd.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  count: number,\n  required: boolean,\n  onChange: (name: string, value: string) => void,\n  isEqual: boolean,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  count,\n  required = false,\n  onChange = () => {},\n  isEqual,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [touched, setToched] = useState(false);\n  const hasError = touched && !value && required;\n\n  useEffect(() => {\n    setToched(false);\n  }, [count]);\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          defaultValue={value}\n          onChange={event => onChange(name, event.currentTarget.value.trim())}\n          onBlur={() => setToched(true)}\n        />\n      </div>\n      {\n        value && !isEqual\n          && (<p className=\"help is-danger\">Url is not correct</p>)\n      }\n      {hasError && (<p className=\"help is-danger\">{`${label} is required`}</p>)}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (movies: Movie[]) => void\n  movies : Movie[]\n};\n\nconst inputs = ['title', 'description', 'imgUrl', 'imdbUrl', 'imdbId'];\n\nconst defaultMovie = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd, movies }) => {\n  const [count, setCount] = useState(0);\n  const [movie, setMovie] = useState<Movie>({ ...defaultMovie });\n\n  const addHandler = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    onAdd([...movies, movie]);\n    setMovie({ ...defaultMovie });\n    setCount(movies.length);\n  };\n\n  function onChange(name: string, value: string) {\n    setMovie({ ...movie, ...{ [name]: value } });\n  }\n\n  const validUrl = (url: string) => {\n    const pattern = new RegExp(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/);\n\n    return pattern.test(url);\n  };\n\n  const isValueEmpty = Object.entries(movie)\n    .filter(item => item[0] !== 'description')\n    .every(item => item[1] !== '');\n\n  const renderInput = (inputName: string) => {\n    return (\n      <TextField\n        key={inputName}\n        name={inputName}\n        label={inputName}\n        value={movie[inputName]}\n        required={inputName !== 'description'}\n        isEqual={['imgUrl', 'imdbUrl'].includes(inputName) ? validUrl(movie[inputName]) : true}\n        // eslint-disable-next-line react/jsx-no-bind\n        onChange={onChange}\n        count={count}\n      />\n    );\n  };\n\n  return (\n    <form className=\"NewMovie\" key={count}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      {inputs.map(input => renderInput(input))}\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={!isValueEmpty || !validUrl(movie.imdbUrl) || !validUrl(movie.imgUrl)}\n            onClick={(e) => addHandler(e)}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState([...moviesFromServer]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={setMovies} movies={movies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}